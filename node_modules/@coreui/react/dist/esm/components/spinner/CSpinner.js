import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';
import React, { forwardRef } from 'react';
import PropTypes from 'prop-types';
import classNames from '../../node_modules/classnames/index.js';
import { colorPropType } from '../../props.js';

var CSpinner = forwardRef(function (_a, ref) {
    var _b;
    var className = _a.className, color = _a.color, _c = _a.component, Component = _c === void 0 ? 'div' : _c, size = _a.size, _d = _a.variant, variant = _d === void 0 ? 'border' : _d, _e = _a.visuallyHiddenLabel, visuallyHiddenLabel = _e === void 0 ? 'Loading...' : _e, rest = __rest(_a, ["className", "color", "component", "size", "variant", "visuallyHiddenLabel"]);
    return (React.createElement(Component, __assign({ className: classNames("spinner-".concat(variant), (_b = {},
            _b["spinner-".concat(variant, "-").concat(size)] = size,
            _b["text-".concat(color)] = color,
            _b), className), role: "status" }, rest, { ref: ref }),
        React.createElement("span", { className: "visually-hidden" }, visuallyHiddenLabel)));
});
CSpinner.propTypes = {
    className: PropTypes.string,
    color: colorPropType,
    component: PropTypes.string,
    size: PropTypes.oneOf(['sm']),
    variant: PropTypes.oneOf(['border', 'grow']),
    visuallyHiddenLabel: PropTypes.string,
};
CSpinner.displayName = 'CSpinner';

export { CSpinner };
//# sourceMappingURL=CSpinner.js.map
