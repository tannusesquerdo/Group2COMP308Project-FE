import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';
import React, { forwardRef, useContext } from 'react';
import PropTypes from 'prop-types';
import classNames from '../../node_modules/classnames/index.js';
import { CDropdownContext } from './CDropdown.js';
import { CConditionalPortal } from '../conditional-portal/CConditionalPortal.js';
import { useForkedRef } from '../../hooks/useForkedRef.js';
import '@popperjs/core';
import { getAlignmentClassNames } from './utils.js';

var CDropdownMenu = forwardRef(function (_a, ref) {
    var children = _a.children, className = _a.className, _b = _a.component, Component = _b === void 0 ? 'ul' : _b, rest = __rest(_a, ["children", "className", "component"]);
    var _c = useContext(CDropdownContext), alignment = _c.alignment, container = _c.container, dark = _c.dark, dropdownMenuRef = _c.dropdownMenuRef, popper = _c.popper, portal = _c.portal, visible = _c.visible;
    var forkedRef = useForkedRef(ref, dropdownMenuRef);
    return (React.createElement(CConditionalPortal, { container: container, portal: portal !== null && portal !== void 0 ? portal : false },
        React.createElement(Component, __assign({ className: classNames('dropdown-menu', {
                show: visible,
            }, alignment && getAlignmentClassNames(alignment), className), ref: forkedRef, role: "menu", "aria-hidden": !visible }, (!popper && { 'data-coreui-popper': 'static' }), (dark && { 'data-coreui-theme': 'dark' }), rest), Component === 'ul'
            ? React.Children.map(children, function (child, index) {
                if (React.isValidElement(child)) {
                    return React.createElement("li", { key: index }, React.cloneElement(child));
                }
                return;
            })
            : children)));
});
CDropdownMenu.propTypes = {
    children: PropTypes.node,
    className: PropTypes.string,
    component: PropTypes.elementType,
};
CDropdownMenu.displayName = 'CDropdownMenu';

export { CDropdownMenu };
//# sourceMappingURL=CDropdownMenu.js.map
